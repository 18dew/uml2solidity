[comment encoding = UTF-8 /]
[module generateHtml('http://www.eclipse.org/uml2/5.0.0/UML')]

[import de::urszeidler::eclipse::solidity::util::um2service /]

[template public generateHtmlInterface(aModel : Model)]
[comment @main/]
[generatePackage(aModel)/]
[iteratePackages(aModel)/]
[/template]


[**
 * Iterates over the packages.
*/]
[template private iteratePackages(p : Package)]
[for (p1 : Package | p.nestedPackage)]
[generatePackage(p1)/]
[iteratePackages(p1)/]
[/for]
[/template]

[**
 * Generate a basic html example for the given package.
*/]
[template public generatePackage(p : Package)?(isGeneratePackage(p)) ]
[file (p.name+'.html', false, 'UTF-8')]
<!doctype>
<html>
<head>
<script type='text/javascript' src="[p.name/]Web3.js">
</script>
[printJavaScript(p)/]
<!-- start of style -->
<style>
.contract {
	border-style: solid;
	border-width: 1px;
	} 
.contract_attributes{
	border-style: solid;
	border-width: 1px;
	} 
</style>
</head>
<body bgcolor='#E6E6FA'>
	<h1>Sample Interface for [p.name/]</h1>
[printHtmlInterface(p)/]
[printAllContractAdresses(p)/]
</body>
</html>
[/file]
[/template]

[template public printAllContractAdresses (p : Package) ]
<script type='text/javascript'>
[for (	aClass : Class | p.allContracts())]
if(contracts[ '[' /]'[aClass.name/]'[ ']' /]!=undefined){
  [aClass.name/]_instance = contracts[ '[' /]'[aClass.name/]'[ ']' /].contract;
  document.getElementById('[aClass.name/]_address').value = [aClass.name/]_instance.address; 
  [aClass.name/]_updateAttributes();
}
[/for]
</script>
[/template]


[query private allSubAttributes(aClass : Class) : OrderedSet(Property) = aClass.allAttributes()
	->select(not hasStereotype('Mapping') and not hasStereotype('KeyMapping'))
	->select(isPublic())
	->sortedBy(indexInContainer(oclAsType(Property)) + name )
 /]

[query private allMappingSubAttributes(aClass : Class) : OrderedSet(Property) = aClass.allAttributes()
	->select(hasStereotype('Mapping'))
	->select(isPublic())
	->sortedBy(indexInContainer(oclAsType(Property)) + name )
 /]

[query private allKeyMappingSubAttributes(aClass : Class) : OrderedSet(Property) = aClass.allAttributes()
	->select(hasStereotype('KeyMapping'))
	->select(isPublic())
	->sortedBy(indexInContainer(oclAsType(Property)) + name )
 /]

[template public printHtmlMappingInterface (c:Class , p : Property, k : Type,v : Type) ]
<div class="Value_Mapping" id="[c.name/]_contract_attribute_[p.name/]">mapping  [p.name/]:
		<input type='text' id='[c.name/]_contract_attribute_[p.name/]_input'>([k.name/])
    	<div class="Mapping_value" id="[c.name/]_contract_attribute_[k.name/]"> [v.name/]:
      		<div class="contract_attribute_value" id="[c.name/]_[p.name/]_value"> </div>
    	</div>
  </div>
[/template]

[template public printHtmlScructInterface (c:Class , p : Property, k : Type,v : Classifier) ]
<!--struct -->
<div class="Struct_Mapping" id="Struc_[c.name/]_contract_attribute_[p.name/]">struc mapping  [p.name/]:
		<input type='text' id='[c.name/]_contract_attribute_[p.name/]_input'>([k.name/])
[for (p1 : Property | v.attribute)]
    	<div class="Struct_attribute" id="[c.name/]_contract_attribute_[p.name/]_[p1.name/]"> [p1.name/]:
      		<div class="Struct_attribute_value" id="[c.name/]_[p.name/]_[p1.name/]_value"> </div>
    	</div>
[/for]
  </div>
[/template]

[template public printHtmlInterface (p : Package)? (not p.oclIsUndefined())]
[for (	aClass : Class | p.allContracts())]
<!-- gui for [aClass.name/]_contract -->
<div class="contract" id="[aClass.name/]_contract">
[aClass.name/]:
  <input type='text' id='[aClass.name/]_address'> <button onclick='[aClass.name/]_setAddress()'>change [aClass.name/] Address</button>
  <div class="contract_attributes" id="[aClass.name/]_contract_attributes"> attributes:
[for (p : Property | aClass.allSubAttributes())]
    <div class="contract_attribute" id="[aClass.name/]_contract_attribute_[p.name/]"> [p.name/]:
      <div class="contract_attribute_value" id="[aClass.name/]_[p.name/]_value"> </div>
    </div>
[/for]

[for (p : Property | aClass.allMappingSubAttributes())]
[let value : Classifier = p.getStereotypeValue('Mapping', 'value').oclAsType(Classifier)]
[if (value.oclIsTypeOf(Class))]
[printHtmlScructInterface(aClass, p, p.type, value )/]
[else]
[printHtmlMappingInterface(aClass, p, p.type, value)/]
[/if]
[/let]
[/for]
[for (p : Property | aClass.allKeyMappingSubAttributes())]
[let key : Classifier = p.getStereotypeValue('KeyMapping', 'key').oclAsType(Classifier)]
[if (p.type.oclIsTypeOf(Class))]
[printHtmlScructInterface(aClass,p, key, p.type.oclAsType(Class))/]
[else]
[printHtmlMappingInterface(aClass,p, key, p.type)/]
[/if]
[/let]
[/for]

    <button onclick='[aClass.name/]_updateAttributes()'>update [aClass.name/] attributes</button>
  </div>
[printOperationsUi(aClass,'')/]
[for (prop : Property | aClass.attribute->select(hasStereotype('Delegate')))]
[printOperationsUi(prop.type.oclAsType(Class),'delegate_')/]
[/for]
</div>
[/for]
[/template]

[template public printOperationsUi (aClass : Class,prefix:String)? (not aClass.oclIsUndefined()) ]
[for (op : Operation | aClass.allSubFunctions()->select(isPublic()))]
  <div class="function_execution" id="[aClass.name/]_contract_function_[op.functionName()/]">
[aClass.name/]_[op.name/]:
[for (p : Parameter | op.allInParameters())]
	<input type='[p.type.toHtmlType()/]' id='[prefix/][op.functionName()/]_[p.name/]'>
[/for]
	<button onclick='[prefix/][op.functionName()/]()'>execute [aClass.name/]_[op.name/]</button>
	<div class="function_result" id="[prefix/][op.functionName()/]_res"></div>
  </div>
[/for]
[/template]

[template public functionName(op : Operation)]
[op.owner.oclAsType(NamedElement).name/]_[op.name/][for (p : Parameter | op.allInParameters())]_[p.type.name/][/for][/template]

[template public printJavaScript (p : Package) ]
[for (	aClass : Class | p.allContracts())]
<!-- javascript for [aClass.name/] -->
<script type='text/javascript'>
[printJavascriptForClass(aClass)/]
</script>
[if (aClass.generateJsController())]
[file (aClass.getJsControllerDirectory()+ '/' + aClass.owner.oclAsType(NamedElement).name+'-'+aClass.name+'-controller.js', false, 'UTF-8')]
[printJavascriptForClass(aClass)/]
[/file]
[/if]

[/for]
[/template]

[template public printJavascriptForClass (aClass : Class) ]
// script for [aClass.name/]
var [aClass.name/]_instance = undefined;
	
// set address
function [aClass.name/]_setAddress() {
	var _address = document.getElementById('[aClass.name/]_address').value;
	[aClass.name/]_instance = [aClass.name/]Contract.at(_address);
}

function [aClass.name/]_updateAttributes() {
// update attributes
[for (p : Property | aClass.allSubAttributes())]
var [p.name/]_res = [aClass.name/]_instance.[p.name/]();
	if([p.name/]_res!=null)
		document.getElementById('[aClass.name/]_[p.name/]_value').innerText = [p.name/]_res;
[/for]
[for (p : Property | aClass.allMappingSubAttributes())]
[let value : Classifier = p.getStereotypeValue('Mapping', 'value').oclAsType(Classifier)]
[if (value.oclIsTypeOf(Class))]
var _key = document.getElementById('[aClass.name/]_contract_attribute_[p.name/]_input').value;
var [p.name/]_res = [aClass.name/]_instance.[p.name/](_key);
	if([p.name/]_res!=null){
[for (p1 : Property | value.attribute)]
		document.getElementById('[aClass.name/]_[p.name/]_[p1.name/]_value').innerText = [p.name/]_res[ '[' /][ i-1/][ ']' /];
[/for]
	}
[else]
var _key = document.getElementById('[aClass.name/]_contract_attribute_[p.name/]_input').value;
var [p.name/]_res = [aClass.name/]_instance.[p.name/](_key);
	if([p.name/]_res!=null){
		document.getElementById('[aClass.name/]_[p.name/]_value').innerText = [p.name/]_res;
	}
[/if]
[/let]
[/for]
[for (p : Property | aClass.allKeyMappingSubAttributes())]
[let key : Classifier = p.getStereotypeValue('KeyMapping', 'key').oclAsType(Classifier)]
[if (p.type.oclIsTypeOf(Class))]
var _key = document.getElementById('[aClass.name/]_contract_attribute_[p.name/]_input').value;
var [p.name/]_res = [aClass.name/]_instance.[p.name/](_key);
	if([p.name/]_res!=null){
[for (p1 : Property | p.type.oclAsType(Class).attribute)]
		document.getElementById('[aClass.name/]_[p.name/]_[p1.name/]_value').innerText = [p.name/]_res[ '[' /][ i-1/][ ']' /];
[/for]
	}
[else]
var _key = document.getElementById('[aClass.name/]_contract_attribute_[p.name/]_input').value;
var [p.name/]_res = [aClass.name/]_instance.[p.name/](_key);
	if([p.name/]_res!=null){
		document.getElementById('[aClass.name/]_[p.name/]_value').innerText = [p.name/]_res;
	}
[/if]
[/let]
[/for]

}
[printCallFunction(aClass,aClass,'')/]
//delegated calls
[for (prop : Property | aClass.attribute->select(hasStereotype('Delegate')))]
[printCallFunction(prop.type.oclAsType(Class),aClass,'delegate_')/]
[/for]
[/template]

[template private printCallFunction(aClass : Class,aContractClass : Class, prefix:String)]
//call functions
[for (op : Operation | aClass.allSubFunctions())]
//function [prefix/][aClass.name/]_[op.name/]
function [prefix/][op.functionName()/]() {
[for (p : Parameter | op.allInParameters())]
	var param_[p.name/] = document.getElementById('[prefix/][op.functionName()/]_[p.name/]').value;
[/for]
	var res = [aClass.name/]_instance.[op.name/]([for (p : Parameter | op.allInParameters())separator (', ')]param_[p.name/][/for]);
[if (op.hasReturnValue())]
	if(res!=null)
		document.getElementById('[prefix/][op.functionName()/]_res').innerText = res;
[/if]
}
[/for]
[/template]

[query public toHtmlType (t : Type) : String = 'text' /]

